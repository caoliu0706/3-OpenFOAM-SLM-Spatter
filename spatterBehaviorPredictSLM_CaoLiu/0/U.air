/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      binary;
    class       volVectorField;
    location    "0";
    object      U.air;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    WALL
    {
        type            noSlip;
    }
    
    BOTTOM_cavity
    {
        type            noSlip;
    }

    OUTLET
    {
        type            pressureInletOutletVelocity;
        phi             phi.air;
        inletValue      uniform (0 0 0);
        value           uniform (0 0 0);
    }

    BOTTOM
    {
        type codedFixedValue;
        value uniform (0 0 0);
        name moveInlet;
        
        code
        #{
            const vectorField& Cf=patch().Cf();   //center of the patch
            vectorField& field=*this;   //target velocity field
            const scalar currentTime=this->db().time().value();
            
            forAll (Cf, faceI)
            {
                if(Cf[faceI][0]>=(0.081+0.2*(currentTime-0.2)) && Cf[faceI][0]<(0.0811+0.2*(currentTime-0.2)) && Cf[faceI][1]>0.0025 && Cf[faceI][1]<0.0026 && currentTime>=0.2 && currentTime<0.24)
                {
                    field[faceI]=vector(0,0,30);
                }
                else
                {
                    field[faceI]=vector(0,0,0);
                }
            }
        #};
        
        phi             phi.air;
        alpha           alpha.air;
    }
    
    INLET
    {
        type            interstitialInletVelocity;
        inletVelocity   uniform (-1.0 0 0);
        value           uniform (-1.0 0 0);
        phi             phi.air;
        alpha           alpha.air;
    }
}


// ************************************************************************* //
